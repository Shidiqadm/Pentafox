# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qnGJs_lDWJS2pBuXNnq53VMO0JYtdb7G

A bicyclist cycles around a circular park with a pathway connecting two opposite end points of
the path of length 7kms. Develop a logic that computes the total distance covered by the cyclist
for a given set of rounds cycled.
"""

area=120
round = int(input("Enter the No of Rounds: "));
print(area*round, "Kms travelled")

"""A fixed set of positive integers is dictated by the mathematics professor during a puzzle contest.
The professor asks the students to find a pair of numbers that result in a given sum. Code a
logic that can automate this puzzle. Use the below input for your exercise.
"""

array = input("Enter the set of numbers: ")
a_list = array.split()
map_object = map(int, a_list)
list_of_integers = list(map_object)
ans=[]

sum = int(input("Enter the sum: "))

for i in range(0, len(list_of_integers)):
        for j in range(i + 1, len(list_of_integers)):
            if list_of_integers[i] + list_of_integers[j] == sum:
              ans.append(list_of_integers[i])
              ans.append(list_of_integers[j])
if not ans:
  print("No pairs found")
else:
  print(ans)

"""Alice is a cryptanalyst who is in charge of transmitting messages to bob without any intruder
getting hands on it. Alice thinks of transmitting the message by reversing it with a random
character appended as prefix to the encoded message.
"""

import random
import string
message = input("Enter the message you want to encrypt: ")
rand = random.choice(string.ascii_letters)
print(rand.capitalize()+message[::-1])

"""In a puzzle contest, the chairman of your English club posts a problem to compare a given pair
of words and eliminate all common characters in them. To speed up the process of judging, the
computer club head was requested to prepare computer logic. Please code a solution to the
above problem applying your own skillset.
"""

word1 = input("Enter the word 01: ")
word2 = input("Enter the word 02: ")
l=[]
m=[]

for i in range(0,len(word1)):
  if (word1[i] != word2[i]):
    l.append(word1[i])
    if (word2[i] != word1[i]):
      m.append(word2[i])

listToStr1 = ' '.join(map(str, l)) 
listToStr2 = ' '.join(map(str, m)) 
print(listToStr1,listToStr2)

"""A school camp is organized by a school to support the process of preparing their students for
an examination. They are in need of a study timetable that has following assumptions:
Assumptions:
1. Total Days of Camp – 5 Days
2. Total Hours a day – 5 Days
3. Total Subjects – 5 Subjects

Note: The timetable should not follow the same order and should be in random everyday.
Prepare code logic to help the School.
"""

import random

Days=['monday','tuesday','wednesday','thursdar','friday']
Subjects=['english','maths','physics','chemistry','biology']
n=5
for i in Days:
  print(i,random.sample(Subjects,n))

"""The alphabetical value is represented from 1-26 for characters A-Z respectively. Using this
principle generate a crypto decoder that can generate the message for transmitted sequence of
alphabetical values.
"""

sequence = input("Enter the sequence to decode: ")
l = sequence.split(",")

for i in range (0,len(l)):
  if (int(l[i])>26 or int(l[i])<1):
    print("Decode failed on",l[i],"please check the sequence")
  else:
    m = int(l[i])
    print(chr(64+m), end=" ")

"""As a computer engineer, you are requested to reduce the storage space needed to store the
textual content in the computer. Write a logic that can compress the content as given in the
below example.
"""

word = input("Enter a word: ")

for i in range(0,len(word)):
  count=1
  if(word[i]==word[i-1]):
    count+=1
  print(str(word[i]) if count==1 else count ,end="")

"""#**React.js**

Create a method/funcon to check whether the given 2 strings are anagram to one
another or not. Return true if they are anagram.
"""

def areAnagram(str1, str2):
    n1 = len(str1)
    n2 = len(str2)

    if n1 != n2:
        return 0
  
    str1 = sorted(str1)
    str2 = sorted(str2)

    for i in range(0, n1):
        if str1[i] != str2[i]:
            return 0
  
    return 1

str1 = input("Enter word 1:")
str2 = input("Enter word 2:")
  
if areAnagram(str1, str2):
    print("The two strings are anagram of each other")
else:
    print("The two strings are not anagram of each other")

"""Return the sum of the prime numbers between given range (including given numbers).
Eg., Input: 3 & 60. Output should print the sum of all the primes lying between 3 & 60
"""

lower = int(input("Enter the minimum value: "))
upper = int(input("ENter the maximum value: "))

print("Prime numbers between", lower, "and", upper, "are:")

for num in range(lower, upper + 1):
   # all prime numbers are greater than 1
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num, end=",")

"""Return the total number of days from the date given to ll now.
Eg., Input: 24-01-1995 & Output should return the total days
"""

from datetime import date
d = int(input("Enter Day: "))
m = int(input("Enter Month: "))
y = int(input("Enter Year: "))

date1 = datetime.now()
date2 = datetime(day=d, month=m, year=y)

remain = date2 - date1
print("No of Days :",abs(remain.days))

